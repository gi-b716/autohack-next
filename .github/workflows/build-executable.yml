name: Build executable

on:
  workflow_call:
    inputs:
      NAME:
        required: true
        type: string
      APP_VERSION:
        required: true
        type: string
      HASH:
        required: true
        type: string

jobs:
  build-executables:
    strategy:
      matrix:
        include:
          # https://docs.github.com/en/actions/reference/runners/github-hosted-runners#standard-github-hosted-runners-for-public-repositories
          # Linux
          - os: ubuntu-24.04
            platform: linux
            arch: x64
          - os: ubuntu-24.04-arm
            platform: linux
            arch: arm64
          # Windows
          - os: windows-2025
            platform: windows
            arch: x64
          - os: windows-11-arm
            platform: windows
            arch: arm64
          # macOS
          - os: macos-13
            platform: macos
            arch: Intel
          - os: macos-15
            platform: macos
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Download changelog
        uses: actions/download-artifact@v5
        with:
          name: changelog

      - name: Configure Python environment
        uses: ./.github/actions/prepare-python-env

      - name: Setup UPX
        uses: ./.github/actions/install-upx
        env:
          MATRIX_PLATFORM: ${{ matrix.platform }}

      - name: Build executable
        run: |
          python -m nuitka --standalone --onefile --follow-imports --enable-plugins=upx --lto=yes --warn-implicit-exceptions --warn-unusual-code --include-data-dir="autohack/i18n"="autohack/i18n" --file-version=${{ inputs.APP_VERSION }} --assume-yes-for-downloads autohack/__main__.py

      - name: Create release package (Linux / macOS)
        if: matrix.platform == 'linux' || matrix.platform == 'macos'
        run: |
          mkdir release-package
          cp README.md release-package/
          cp changelog.md release-package/CHANGELOG.md
          cp __main__.bin release-package/autohack
          cp -r docs release-package/
          cd release-package
          zip -r ../autohack-${{ matrix.platform }}-${{ matrix.arch }}-${{ inputs.NAME }}-${{ inputs.HASH }}.zip .

      - name: Create release package (Windows)
        if: matrix.platform == 'windows'
        shell: pwsh
        run: |
          mkdir release-package
          cp README.md release-package/
          cp changelog.md release-package/CHANGELOG.md
          mv __main__.exe autohack.exe
          cp autohack.exe release-package/autohack.exe
          cp -r docs release-package/
          cd release-package
          Compress-Archive -Path * -DestinationPath ../autohack-${{ matrix.platform }}-${{ matrix.arch }}-${{ inputs.NAME }}-${{ inputs.HASH }}.zip

      - name: Upload executable artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.platform }}-${{ matrix.arch }}
          path: autohack-${{ matrix.platform }}-${{ matrix.arch }}-${{ inputs.NAME }}-${{ inputs.HASH }}.zip
